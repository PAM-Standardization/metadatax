# Generated by Django 3.2.25 on 2025-06-25 09:05

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AudioProperties',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sampling_frequency', models.IntegerField(help_text='Sampling frequency of the audio file (in Hertz). If it is different from the channel sampling frequency, resampling has been performed.', validators=[django.core.validators.MinValueValidator(0)])),
                ('initial_timestamp', models.DateTimeField(help_text='Date and time of the audio file start (in UTC).', verbose_name='Initial timestamp (UTC)')),
                ('duration', models.IntegerField(help_text='Duration of the audio file (in seconds).', validators=[django.core.validators.MinValueValidator(0)])),
                ('sample_depth', models.IntegerField(blank=True, help_text='Number of quantization bits used to represent each sample (in bits). If it is different from the channel sampling frequency, re-quantization has been performed.', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DetectionProperties',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(help_text='Start of the detection file covering (in UTC).', verbose_name='Start timestamp (UTC)')),
                ('end', models.DateTimeField(help_text='End of the detection file covering (in UTC).', verbose_name='End timestamp (UTC)')),
            ],
        ),
        migrations.CreateModel(
            name='FileFormat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Format of the file', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(help_text='Name of the file, with extension.', max_length=255)),
                ('storage_location', models.TextField(blank=True, help_text='Description of the path to access the data.', null=True)),
                ('file_size', models.BigIntegerField(blank=True, help_text='Total number of bytes of the audio file (in bytes).', null=True)),
                ('accessibility', models.TextField(blank=True, choices=[('C', 'Confidential'), ('R', 'Upon request'), ('O', 'Open access')], default='R', help_text='Accessibility level of the data. If the availability is not sure or non-uniform within the audio file, the default value is upon request.', null=True)),
                ('audio_properties', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='file', to='metadatax_data.audioproperties')),
                ('detection_properties', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='file', to='metadatax_data.detectionproperties')),
                ('format', models.ForeignKey(help_text='Format of the audio file.', on_delete=django.db.models.deletion.PROTECT, to='metadatax_data.fileformat')),
            ],
        ),
    ]
