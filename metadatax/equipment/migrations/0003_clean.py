# Generated by Django 3.2.25 on 2025-07-23 15:37

import datetime

import django.db.models.deletion
from django.db import migrations, models

import metadatax.utils.custom_fields.byte
import metadatax.utils.custom_fields.duration


class Migration(migrations.Migration):

    dependencies = [
        ("equipment", "0002_maintenance_maintainer_institution"),
    ]

    operations = [
        migrations.RenameModel(
            old_name="SDCardSpecification",
            new_name="StorageSpecification",
        ),
        migrations.AlterModelOptions(
            name="storagespecification",
            options={"ordering": ("-capacity",)},
        ),
        migrations.AddField(
            model_name="storagespecification",
            name="type",
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name="equipment",
            name="sd_card_specification",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="equipment.storagespecification",
            ),
        ),
        migrations.AlterModelTable(
            name="storagespecification",
            table="metadatax_equipment_storagespecification",
        ),
        migrations.RemoveConstraint(
            model_name="equipment",
            name="sd_card_is_only_sd_card",
        ),
        migrations.RenameField(
            model_name="equipment",
            old_name="sd_card_specification",
            new_name="storage_specification",
        ),
        migrations.RenameField(
            model_name="recorderspecification",
            old_name="sd_maximum_capacity",
            new_name="storage_maximum_capacity",
        ),
        migrations.RenameField(
            model_name="recorderspecification",
            old_name="sd_slots_count",
            new_name="storage_slots_count",
        ),
        migrations.RenameField(
            model_name="recorderspecification",
            old_name="sd_type",
            new_name="storage_type",
        ),
        migrations.AlterModelOptions(
            name="equipment",
            options={"ordering": ("name", "model", "serial_number")},
        ),
        migrations.AlterField(
            model_name="equipment",
            name="acoustic_detector_specification",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="equipment.acousticdetectorspecification",
            ),
        ),
        migrations.AlterField(
            model_name="equipment",
            name="hydrophone_specification",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="equipment.hydrophonespecification",
            ),
        ),
        migrations.AlterField(
            model_name="equipment",
            name="recorder_specification",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="equipment.recorderspecification",
            ),
        ),
        migrations.AlterField(
            model_name="maintenancetype",
            name="interval",
            field=metadatax.utils.custom_fields.duration.DurationField(
                blank=True, null=True
            ),
        ),
        migrations.AlterField(
            model_name="equipment",
            name="purchase_date",
            field=metadatax.utils.custom_fields.date.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="maintenance",
            name="date",
            field=metadatax.utils.custom_fields.date.DateField(
                default=datetime.date.today
            ),
        ),
        migrations.AddField(
            model_name="recorderspecification",
            name="new_storage_maximum_capacity",
            field=metadatax.utils.custom_fields.byte.ByteField(
                base_field=models.CharField(max_length=4),
                blank=True,
                help_text="In byte",
                null=True,
                size=2,
            ),
        ),
        migrations.AddField(
            model_name="storagespecification",
            name="new_capacity",
            field=metadatax.utils.custom_fields.byte.ByteField(
                base_field=models.CharField(max_length=4),
                blank=True,
                help_text="in byte",
                null=True,
                size=2,
            ),
        ),
        migrations.AlterField(
            model_name="storagespecification",
            name="capacity",
            field=models.IntegerField(help_text="In byte"),
        ),
        migrations.RunSQL(
            sql="\n            UPDATE metadatax_equipment_storagespecification\n            SET new_capacity = CASE\n                    WHEN capacity >= 1000000000 THEN ARRAY[CAST(capacity / 1000000000 as VARCHAR),'Gb']\n                    WHEN capacity >= 1000000 THEN ARRAY[CAST(capacity / 1000000 as VARCHAR),'Mb']\n                    WHEN capacity >= 1000 THEN ARRAY[CAST(capacity / 1000 as VARCHAR),'Kb']\n                    ELSE ARRAY[CAST(capacity as VARCHAR),'b']\n                END\n            ",
        ),
        migrations.RunSQL(
            sql="\n            UPDATE metadatax_equipment_recorderspecification\n            SET new_storage_maximum_capacity = CASE\n                    WHEN storage_maximum_capacity >= 1000000000 THEN ARRAY[CAST(storage_maximum_capacity / 1000000000 as VARCHAR),'Gb']\n                    WHEN storage_maximum_capacity >= 1000000 THEN ARRAY[CAST(storage_maximum_capacity / 1000000 as VARCHAR),'Mb']\n                    WHEN storage_maximum_capacity >= 1000 THEN ARRAY[CAST(storage_maximum_capacity / 1000 as VARCHAR),'Kb']\n                    ELSE ARRAY[CAST(storage_maximum_capacity as VARCHAR),'b']\n                END\n            ",
        ),
        migrations.AlterModelOptions(
            name="storagespecification",
            options={"ordering": ("-new_capacity",)},
        ),
        migrations.RemoveField(
            model_name="recorderspecification",
            name="storage_maximum_capacity",
        ),
        migrations.RemoveField(
            model_name="storagespecification",
            name="capacity",
        ),
        migrations.AlterModelOptions(
            name="storagespecification",
            options={"ordering": ("-capacity",)},
        ),
        migrations.RenameField(
            model_name="recorderspecification",
            old_name="new_storage_maximum_capacity",
            new_name="storage_maximum_capacity",
        ),
        migrations.RenameField(
            model_name="storagespecification",
            old_name="new_capacity",
            new_name="capacity",
        ),
        migrations.AlterField(
            model_name="recorderspecification",
            name="storage_maximum_capacity",
            field=metadatax.utils.custom_fields.byte.ByteField(
                base_field=models.CharField(max_length=4), blank=True, null=True, size=2
            ),
        ),
        migrations.AlterField(
            model_name="storagespecification",
            name="capacity",
            field=metadatax.utils.custom_fields.byte.ByteField(
                base_field=models.CharField(max_length=4), size=2
            ),
        ),
    ]
