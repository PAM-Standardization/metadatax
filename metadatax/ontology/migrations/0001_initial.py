# Generated by Django 3.2.25 on 2025-06-24 08:58

import django.core.validators
import django.db.models.expressions
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Label",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nickname", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={"db_table": "metadatax_ontology_label"},
        ),
        migrations.CreateModel(
            name="Source",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("english_name", models.CharField(max_length=255, unique=True)),
                ("latin_name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "french_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("code_name", models.CharField(blank=True, max_length=20, null=True)),
                ("taxon", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="children",
                        to="ontology.source",
                    ),
                ),
            ],
            options={"db_table": "metadatax_ontology_source"},
        ),
        migrations.CreateModel(
            name="Sound",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("english_name", models.CharField(max_length=255, unique=True)),
                (
                    "french_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("code_name", models.CharField(blank=True, max_length=20, null=True)),
                ("taxon", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "associated_names",
                    models.ManyToManyField(
                        related_name="_ontology_sound_associated_names_+",
                        to="ontology.Sound",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="children",
                        to="ontology.sound",
                    ),
                ),
            ],
            options={"db_table": "metadatax_ontology_sound"},
        ),
        migrations.CreateModel(
            name="PhysicalDescriptor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "shape",
                    models.TextField(
                        choices=[
                            ("S", "Stationary"),
                            ("P", "Pulse"),
                            ("FM", "Frequency modulation"),
                        ],
                        max_length=2,
                    ),
                ),
                (
                    "plurality",
                    models.TextField(
                        choices=[("O", "One"), ("S", "Set"), ("RS", "Repetitive Set")],
                        max_length=2,
                    ),
                ),
                ("min_frequency", models.PositiveIntegerField(blank=True, null=True)),
                ("max_frequency", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "mean_duration",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "label",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="physical_descriptor",
                        to="ontology.label",
                    ),
                ),
            ],
            options={"db_table": "metadatax_ontology_physicaldescriptor"},
        ),
        migrations.AddField(
            model_name="label",
            name="sound",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="labels",
                to="ontology.sound",
            ),
        ),
        migrations.AddField(
            model_name="label",
            name="source",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="labels",
                to="ontology.source",
            ),
        ),
        migrations.AddConstraint(
            model_name="source",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("parent_id", django.db.models.expressions.F("id")), _negated=True
                ),
                name="source_cannot_be_self_parent",
            ),
        ),
        migrations.AddConstraint(
            model_name="sound",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("parent_id", django.db.models.expressions.F("id")), _negated=True
                ),
                name="sound_cannot_be_self_parent",
            ),
        ),
    ]
