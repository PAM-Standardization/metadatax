# Generated by Django 3.2.25 on 2025-06-25 09:05

from django.db import migrations, models
import django.db.models.deletion
import metadatax_acquisition.models.channel_configuration_detector_specification
import metadatax_acquisition.models.channel_configuration_recorder_specification


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('metadatax_data', '0001_initial'),
        ('metadatax_acquisition', '0001_initial'),
        ('metadatax_equipment', '0001_initial'),
        ('metadatax_ontology', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='deployment',
            name='platform',
            field=models.ForeignKey(blank=True, help_text='Support of the deployed instruments', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deployments', to='metadatax_equipment.platform'),
        ),
        migrations.AddField(
            model_name='deployment',
            name='project',
            field=models.ForeignKey(help_text='Project associated to this deployment', on_delete=django.db.models.deletion.CASCADE, related_name='deployments', to='metadatax_acquisition.project'),
        ),
        migrations.AddField(
            model_name='deployment',
            name='site',
            field=models.ForeignKey(blank=True, help_text='Conceptual location. A site may group together several platforms in relatively close proximity, or describes a location where regular deployments are carried out.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deployments', to='metadatax_acquisition.site'),
        ),
        migrations.AddField(
            model_name='channelconfigurationrecorderspecification',
            name='hydrophone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='channel_configuration_hydrophone_specifications', to='metadatax_equipment.equipment', validators=[metadatax_acquisition.models.channel_configuration_recorder_specification.validate_hydrophone]),
        ),
        migrations.AddField(
            model_name='channelconfigurationrecorderspecification',
            name='recorder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='channel_configuration_recorder_specifications', to='metadatax_equipment.equipment', validators=[metadatax_acquisition.models.channel_configuration_recorder_specification.validate_recorder]),
        ),
        migrations.AddField(
            model_name='channelconfigurationrecorderspecification',
            name='recording_formats',
            field=models.ManyToManyField(to='metadatax_data.FileFormat'),
        ),
        migrations.AddField(
            model_name='channelconfigurationfiles',
            name='channel_configuration',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metadatax_acquisition.channelconfiguration'),
        ),
        migrations.AddField(
            model_name='channelconfigurationfiles',
            name='file',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metadatax_data.file'),
        ),
        migrations.AddField(
            model_name='channelconfigurationdetectorspecification',
            name='detector',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='channel_configuration_detector_specifications', to='metadatax_equipment.equipment', validators=[metadatax_acquisition.models.channel_configuration_detector_specification.validate_detector]),
        ),
        migrations.AddField(
            model_name='channelconfigurationdetectorspecification',
            name='labels',
            field=models.ManyToManyField(to='metadatax_ontology.Label'),
        ),
        migrations.AddField(
            model_name='channelconfigurationdetectorspecification',
            name='output_formats',
            field=models.ManyToManyField(to='metadatax_data.FileFormat'),
        ),
        migrations.AddField(
            model_name='channelconfiguration',
            name='deployment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metadatax_acquisition.deployment'),
        ),
        migrations.AddField(
            model_name='channelconfiguration',
            name='detector_specification',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='metadatax_acquisition.channelconfigurationdetectorspecification'),
        ),
        migrations.AddField(
            model_name='channelconfiguration',
            name='files',
            field=models.ManyToManyField(blank=True, related_name='channel_configurations', through='metadatax_acquisition.ChannelConfigurationFiles', to='metadatax_data.File'),
        ),
        migrations.AddField(
            model_name='channelconfiguration',
            name='other_equipments',
            field=models.ManyToManyField(blank=True, to='metadatax_equipment.Equipment'),
        ),
        migrations.AddField(
            model_name='channelconfiguration',
            name='recorder_specification',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='metadatax_acquisition.channelconfigurationrecorderspecification'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='project',
            field=models.ForeignKey(help_text='Project associated to this campaign', on_delete=django.db.models.deletion.CASCADE, related_name='campaigns', to='metadatax_acquisition.project'),
        ),
        migrations.AlterUniqueTogether(
            name='site',
            unique_together={('name', 'project')},
        ),
        migrations.AlterUniqueTogether(
            name='deploymentmobileposition',
            unique_together={('deployment', 'datetime')},
        ),
        migrations.AlterUniqueTogether(
            name='deployment',
            unique_together={('project', 'name', 'site', 'campaign')},
        ),
        migrations.AlterUniqueTogether(
            name='channelconfigurationfiles',
            unique_together={('channel_configuration', 'file')},
        ),
        migrations.AlterUniqueTogether(
            name='campaign',
            unique_together={('name', 'project')},
        ),
    ]
